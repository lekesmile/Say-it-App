{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s1900550\\\\Desktop\\\\Sayitout\\\\frontend\\\\src\\\\views\\\\AddPost.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport default class AddPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: '',\n      loggedIn: false\n    };\n    this.useStyles = makeStyles(theme => ({\n      rootit: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n          width: 200,\n          margin: theme.spacing(1)\n        }\n      }\n    }));\n\n    this.handleFormInput = e => {\n      if (e.target.name === \" \") {\n        alert(\"Fields cannot be empty\");\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const header = {\n        Authorization: JSON.parse(localStorage.getItem('userData'))\n      };\n      const sayIt = {\n        title: this.state.title,\n        body: this.state.body\n      };\n      Axios.post('http://localhost:5000/post', header, sayIt).then(res => console.log(res));\n    };\n  }\n\n  render() {\n    const classes = this.useStyles;\n\n    if (this.state.loggedIn === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"formA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.rootit,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Title\",\n      variant: \"outlined\",\n      color: \"default\",\n      name: \"title\",\n      onChange: this.handleFormInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \" \", \" \", \" \", \" \", React.createElement(TextField, {\n      label: \"Message \",\n      variant: \"outlined\",\n      color: \"default\",\n      name: \"body\",\n      onChange: this.handleFormInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \", \" \", React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      size: \"extended\",\n      startIcon: React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Post\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/s1900550/Desktop/Sayitout/frontend/src/views/AddPost.js"],"names":["React","Component","makeStyles","TextField","Button","SaveIcon","Axios","Redirect","AddPost","state","title","body","loggedIn","useStyles","theme","rootit","display","flexWrap","width","margin","spacing","handleFormInput","e","target","name","alert","setState","value","console","log","handleSubmit","preventDefault","header","Authorization","JSON","parse","localStorage","getItem","sayIt","post","then","res","render","classes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class AddPost extends Component {\r\n    state = {\r\n        title: '',\r\n        body: '',\r\n        loggedIn: false\r\n    }\r\n\r\n    useStyles = makeStyles(theme => ({\r\n        rootit: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            '& > *': {\r\n                width: 200,\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n    }));\r\n\r\n\r\n    // componentWillMount() {\r\n    //     if (localStorage.getItem(JSON.parse(\"userData\"))) {\r\n    //         console.log(\"User On\")\r\n    //     } else {\r\n    //         this.setState({ loggedIn: true })\r\n    //     }\r\n    // }\r\n\r\n    handleFormInput = (e) => {\r\n        if (e.target.name === \" \") {\r\n            alert(\"Fields cannot be empty\");\r\n        }\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const header = {\r\n            Authorization:\r\n                JSON.parse(localStorage.getItem('userData'))\r\n        }\r\n\r\n        const sayIt = {\r\n            title: this.state.title,\r\n            body: this.state.body\r\n        }\r\n\r\n        Axios.post('http://localhost:5000/post', header, sayIt)\r\n            .then(res =>\r\n                console.log(res)\r\n            )\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n    render() {\r\n        const classes = this.useStyles;\r\n        if (this.state.loggedIn === true) {\r\n            return (<Redirect to={\"/\"} />)\r\n        }\r\n        return (\r\n            <div className=\"formA\">\r\n                <form className={classes.rootit} onSubmit={this.handleSubmit}>\r\n\r\n                    <TextField\r\n\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        name=\"title\"\r\n                        onChange={this.handleFormInput}\r\n                    />\r\n\r\n                    {\" \"}{\" \"}\r\n                    {\" \"}{\" \"}\r\n                    <TextField\r\n\r\n                        label=\"Message \"\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        name=\"body\"\r\n                        onChange={this.handleFormInput}\r\n\r\n                    />\r\n                    {\" \"}{\" \"}\r\n\r\n                    <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        size=\"extended\"\r\n                        startIcon={<SaveIcon />}\r\n                    >\r\n                        Post\r\n                    </Button>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}